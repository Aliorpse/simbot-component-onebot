name: Publish Release
on:
  push:
    tags:
      - 'v**'

concurrency:
  cancel-in-progress: true
  group: publish-release-${{ github.ref_name }}

env:
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: zulu
  GRADLE_VERSION: 8.10.2
  IS_CI: true
  SIGNING_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_KEY_CONTENTS: ${{ secrets.GPG_SECRET_KEY }}
  SIGNING_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  MAVEN_CENTRAL_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
  MAVEN_CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
  GRADLE_OPTS: "-Xmx8g -Xms2g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"

jobs:
  run-test:
    name: Run all tests for publish
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      # setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Gradle Run Test
        run: gradle assemble allTests -s --warning-mode all
        env:
          ORG_GRADLE_PROJECT_kotlin.native.enableKlibsCrossCompilation: false

  publish-releases:
    name: Publish releases
    needs: run-test
    # 交叉编译 support
    # see https://kotlinlang.org/docs/multiplatform-publish-lib.html#host-requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Publish releases
        run: gradle publishToMavenCentral -i --warning-mode all --no-configuration-cache -x test
        env:
          SIMBOT_IS_SNAPSHOT: false
          SIMBOT_RELEASES_ONLY: true
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-Xmx8g -Xms2g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ env.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ env.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ env.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ env.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ env.GPG_KEY_CONTENTS }}

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: publish-releases
    permissions:
      contents: write
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Create changelog file
        run: gradle createChangelog -i

        # Create gitHub release
      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}
          body_path: .changelog/${{ github.ref_name }}.md
          body: ''
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'dev') }}

  deploy-doc:
    name: Deploy-doc
    runs-on: ubuntu-latest
    needs: publish-releases
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      # setup Java
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      # setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Gradle generate documentation
        run: gradle dokkaGenerate -i --warning-mode all -x test --build-cache
        env:
          ORG_GRADLE_PROJECT_org.gradle.daemon: false
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-Xmx4g -Xms4g -XX:MaxMetaspaceSize=2g -Dfile.encoding=UTF-8"

      - name: Push to doc repository
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PUSH_TOKEN }}
          external_repository: simple-robot-library/simbot3-api-docs
          publish_branch: kdoc-deploy/component-onebot
          publish_dir: ./build/dokka/html
          # deploy to sub dir
          destination_dir: components/onebot
