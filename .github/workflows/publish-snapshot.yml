name: Publish Snapshot
on:
  push:
    branches:
      - main
      - master
      - dev/ver/**
      - dev/main
    paths:
      - 'buildSrc'
      - '**src/**/kotlin/**.kt'
      - '**src/**/java/**.java'
      - '**/src/**/kotlin/**.kt'
      - '**/src/**/java/**.java'
      - '**/build.gradle.kts'
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'gradle.properties'
    tags-ignore:
      - v**
  # 手动触发工作流
  workflow_dispatch:



env:
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: zulu
  GRADLE_VERSION: 8.10.2
  IS_CI: true
  SIGNING_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_KEY_CONTENTS: ${{ secrets.GPG_SECRET_KEY }}
  SIGNING_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  MAVEN_CENTRAL_USERNAME: ${{ secrets.CENTRAL_PORTAL_USERNAME }}
  MAVEN_CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PORTAL_PASSWORD }}
  SIMBOT_IS_SNAPSHOT: true
  SIMBOT_SNAPSHOT_ONLY: true
  GRADLE_OPTS: "-Dfile.encoding=UTF-8"

jobs:
  run-test:
    name: Run all tests
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      # setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Gradle test and publish snapshot
        run: gradle assemble allTests -s -warning-mode all
        env:
          ORG_GRADLE_PROJECT_kotlin.native.enableKlibsCrossCompilation: false

  publish-snapshots:
    name: Publish snapshots
    needs: run-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      # setup Gradle
      - name: Publish snapshots
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Publish snapshots
        run: gradle publishToMavenCentral -s --warning-mode all --no-configuration-cache
        env:
          SIMBOT_IS_SNAPSHOT: true
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-Xmx8g -Xms2g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8"
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ env.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ env.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ env.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ env.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ env.GPG_KEY_CONTENTS }}

  deploy-doc:
    name: Deploy snapshot doc
    runs-on: ubuntu-latest
    needs: publish-snapshots
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      # setup Java
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      # setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Gradle generate documentation
        run: gradle dokkaGenerate -i --warning-mode all -x test --build-cache
        env:
          ORG_GRADLE_PROJECT_org.gradle.jvmargs: "-Xmx4g -Xms4g -XX:MaxMetaspaceSize=2g -Dfile.encoding=UTF-8"
          ORG_GRADLE_PROJECT_org.gradle.daemon: false
          ORG_GRADLE_PROJECT_kotlin.native.enableKlibsCrossCompilation: false

      - name: Push to doc repository
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PUSH_TOKEN }}
          external_repository: simple-robot-library/simbot3-api-docs
          publish_branch: kdoc-deploy/snapshots/component-onebot
          publish_dir: ./build/dokka/html
          # deploy to sub dir
          destination_dir: snapshots/components/onebot
